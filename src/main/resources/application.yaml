#mybatis配置xml文件
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml

server:
  port: 80
  servlet:
    context-path: /demo
spring:
  application:
    name: test-demo
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://192.168.82.119:3306/test031905?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8&failOverReadOnly=false&rewriteBatchedStatements=true
#    username: root
#    password: thinker
  #一个实体类对应多个表
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    #打开sql输出日志
    props:
      sql:
        show: true
    #是否启用sharding，不启用时使用datasource配置的数据源
    enabled: true
    #配置准备好的两个数据库数据源
    datasource:
      names: ds1,ds2
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.82.119:3306/edu_db_1?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8&failOverReadOnly=false&rewriteBatchedStatements=true
        username: root
        password: thinker
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.82.119:3306/edu_db_2?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8&failOverReadOnly=false&rewriteBatchedStatements=true
        username: root
        password: thinker
    sharding:
      #未配置tables分片规则的表将通过默认数据源定位
      #default-data-source-name: ds1
      tables:
        course:
          #配置指定数据库和 course 表规则
          actual-data-nodes: ds$->{1..2}.course_$->{1..2}
          #数据库分片策略
          database-strategy:
            #            inline:
            #              sharding-column: user_id
            #              algorithm-expression: m$->{user_id%2 + 1}
            standard:
              sharding-column: user_id
              #针对范围查询
              range-algorithm-class-name: com.example.demo.algorithm.MyRangeDSShardingAlgorithm
              #针对具体值查询
              precise-algorithm-class-name: com.example.demo.algorithm.MyPreciseDSShardingAlgorithm
          #数据表分片策略
          table-strategy:
            #            inline:
            #              sharding-column: cid
            #              algorithm-expression: course_$->{cid%2 + 1}
            #数据表标准分片策略
            standard:
              sharding-column: cid
              #针对范围查询
              range-algorithm-class-name: com.example.demo.algorithm.MyRangeTableShardingAlgorithm
              #针对具体值查询
              precise-algorithm-class-name: com.example.demo.algorithm.MyPreciseTableShardingAlgorithm

  cloud:
    nacos:
      username: nacos
      password: nacos
      discovery:
        enabled: true
        register-enabled: true
        server-addr: localhost:8848
      config:
        file-extension: yaml
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        prefix: application-demo
        name: application-demo.yaml




logging:
  level:
    com:
      alibaba:
        nacos:
          client:
            naming: warn

#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://192.168.82.119:3306/test031901?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#    username: root
#    password: thinker
